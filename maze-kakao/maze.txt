## maze.py / 풀어보려고 했던 코드

처음에 시작을 now로 현재위치를 잡음
그 다음 answer로 그 time들을 추가해줌
while문으로 들어가서 now와 end가 같지 않을 때 까지로 돌림.
for문을 미로의 개수만큼 돌림.
만약 현재 위치가 traps안에 있다면, 다시 for문을 돌아 함정이 있는 미로들의 경로를 바꿔줌.
만약 현재 위치가 경로중 0번 인덱스에 있는 값이 있다면
현재 위치는 경로중 1번 인덱스로 옮겨지고 answer에 2번 인덱스인 time을 추가시킴.

# 시간 복잡도를 생각하지 않고 만들어서 시간 초과가 떠서 실패함.

## maze2.py
함정은 겹치는 숫자가 없기에 딕셔너리 형태로 만듦.
최소 경로의 초기값을 무한대로 설정.
for문을 돌아 함정의 숫자를 키로 받고 i값을 value로 만듦
costs로 방의 개수보다 1개 많게하여 리스트 안에 빈 딕셔너리 생성
branch 변수는 방의 개수보다 1개 많게 하여 리스트 안에 리스트로 2중 리스트 생성
for문으로 출발 노드를 s, 도착 노드를 e, 시간을 c로 하여
branch에 출발노드를 기준으로 리스트로 e,c를 추가하고    # 정방향
branch에 도착노드를 기준으로 리스트로 s,-c를 추가함.   # 역방향

state는 함정의 개수만큼 '0' 할당.

qu변수에 이중 리스트로 start, state, 0으로 초기값 생성.
costs에 시작 번호를 key로, state의 값을 value로 변경.

qu가 빌때까지 while문을 돌림.
처음 qu면수에 넣었던 값을 loc, state, cost로 옮김.

만약 loc이 함정에 들어있지 않다면 s를 0으로, 있다면 